//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from assets/antlr/Rules.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IRulesListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class RulesBaseListener : IRulesListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.spell"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpell([NotNull] RulesParser.SpellContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.spell"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpell([NotNull] RulesParser.SpellContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.imperative"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImperative([NotNull] RulesParser.ImperativeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.imperative"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImperative([NotNull] RulesParser.ImperativeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.moveUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMoveUnit([NotNull] RulesParser.MoveUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.moveUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMoveUnit([NotNull] RulesParser.MoveUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.spawnUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpawnUnit([NotNull] RulesParser.SpawnUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.spawnUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpawnUnit([NotNull] RulesParser.SpawnUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnit([NotNull] RulesParser.UnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnit([NotNull] RulesParser.UnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.unitType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnitType([NotNull] RulesParser.UnitTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.unitType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnitType([NotNull] RulesParser.UnitTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.unitName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnitName([NotNull] RulesParser.UnitNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.unitName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnitName([NotNull] RulesParser.UnitNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.unitDescription"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnitDescription([NotNull] RulesParser.UnitDescriptionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.unitDescription"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnitDescription([NotNull] RulesParser.UnitDescriptionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.unitBehaviour"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnitBehaviour([NotNull] RulesParser.UnitBehaviourContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.unitBehaviour"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnitBehaviour([NotNull] RulesParser.UnitBehaviourContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.instruction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruction([NotNull] RulesParser.InstructionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.instruction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruction([NotNull] RulesParser.InstructionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.action"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAction([NotNull] RulesParser.ActionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.action"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAction([NotNull] RulesParser.ActionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.move"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMove([NotNull] RulesParser.MoveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.move"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMove([NotNull] RulesParser.MoveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.direction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirection([NotNull] RulesParser.DirectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.direction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirection([NotNull] RulesParser.DirectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.directionUp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirectionUp([NotNull] RulesParser.DirectionUpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.directionUp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirectionUp([NotNull] RulesParser.DirectionUpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.directionDown"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirectionDown([NotNull] RulesParser.DirectionDownContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.directionDown"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirectionDown([NotNull] RulesParser.DirectionDownContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.directionLeft"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirectionLeft([NotNull] RulesParser.DirectionLeftContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.directionLeft"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirectionLeft([NotNull] RulesParser.DirectionLeftContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.directionRight"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirectionRight([NotNull] RulesParser.DirectionRightContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.directionRight"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirectionRight([NotNull] RulesParser.DirectionRightContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.directionRandom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirectionRandom([NotNull] RulesParser.DirectionRandomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.directionRandom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirectionRandom([NotNull] RulesParser.DirectionRandomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.targetUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTargetUnit([NotNull] RulesParser.TargetUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.targetUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTargetUnit([NotNull] RulesParser.TargetUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrigger([NotNull] RulesParser.TriggerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.trigger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrigger([NotNull] RulesParser.TriggerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.startCombat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStartCombat([NotNull] RulesParser.StartCombatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.startCombat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStartCombat([NotNull] RulesParser.StartCombatContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
