//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from assets/antlr/Rules.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="RulesParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public interface IRulesListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.spell"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpell([NotNull] RulesParser.SpellContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.spell"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpell([NotNull] RulesParser.SpellContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.imperative"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImperative([NotNull] RulesParser.ImperativeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.imperative"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImperative([NotNull] RulesParser.ImperativeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.moveUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMoveUnit([NotNull] RulesParser.MoveUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.moveUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMoveUnit([NotNull] RulesParser.MoveUnitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.spawnUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpawnUnit([NotNull] RulesParser.SpawnUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.spawnUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpawnUnit([NotNull] RulesParser.SpawnUnitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.summonCardInHand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSummonCardInHand([NotNull] RulesParser.SummonCardInHandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.summonCardInHand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSummonCardInHand([NotNull] RulesParser.SummonCardInHandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnit([NotNull] RulesParser.UnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnit([NotNull] RulesParser.UnitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.stats"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStats([NotNull] RulesParser.StatsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.stats"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStats([NotNull] RulesParser.StatsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] RulesParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] RulesParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.behaviour"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBehaviour([NotNull] RulesParser.BehaviourContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.behaviour"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBehaviour([NotNull] RulesParser.BehaviourContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruction([NotNull] RulesParser.InstructionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruction([NotNull] RulesParser.InstructionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAction([NotNull] RulesParser.ActionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAction([NotNull] RulesParser.ActionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.move"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMove([NotNull] RulesParser.MoveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.move"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMove([NotNull] RulesParser.MoveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.turn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTurn([NotNull] RulesParser.TurnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.turn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTurn([NotNull] RulesParser.TurnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.damage"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDamage([NotNull] RulesParser.DamageContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.damage"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDamage([NotNull] RulesParser.DamageContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.stepAmount"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStepAmount([NotNull] RulesParser.StepAmountContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.stepAmount"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStepAmount([NotNull] RulesParser.StepAmountContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.directionOR"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirectionOR([NotNull] RulesParser.DirectionORContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.directionOR"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirectionOR([NotNull] RulesParser.DirectionORContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.direction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirection([NotNull] RulesParser.DirectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.direction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirection([NotNull] RulesParser.DirectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.targetUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTargetUnit([NotNull] RulesParser.TargetUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.targetUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTargetUnit([NotNull] RulesParser.TargetUnitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.unitDescription"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnitDescription([NotNull] RulesParser.UnitDescriptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.unitDescription"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnitDescription([NotNull] RulesParser.UnitDescriptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RulesParser.trigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrigger([NotNull] RulesParser.TriggerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RulesParser.trigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrigger([NotNull] RulesParser.TriggerContext context);
}
